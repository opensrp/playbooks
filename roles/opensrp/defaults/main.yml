opensrp_git_url: "https://github.com/OpenSRP/opensrp-server-web.git"
opensrp_resource_sub_dirs:
  - "images"
  - "multimedia"
  - "qr-codes"
opensrp_mysql_port: 3306
opensrp_mysql_host: "localhost"
opensrp_configure_mysql: false
opensrp_mysql_database: "opensrp"
opensrp_motech_database: "motechquartz"
opensrp_mysql_user: "opensrp"
opensrp_mysql_app_host: "localhost"
opensrp_mysql_password: "opensrp"
opensrp_mysql_enable_ssl: true
opensrp_mysql_verify_certificate: true
opensrp_openmrs_url: "https://{{ openmrs_site_name }}/{{ openmrs_install_name }}/"
opensrp_install_name: "opensrp"
opensrp_resource_dir: "/var/lib/OpenSRP"
opensrp_version: "v2.0.0-SNAPSHOT"
opensrp_openmrs_user: "admin"
opensrp_openmrs_password: "admin"
opensrp_openmrs_tomcat_user_home: "/home/openmrs"
opensrp_openmrs_tomcat_instance: "openmrs"
opensrp_openmrs_version: "2.1.4"
opensrp_dhis_url: ""
opensrp_dhis_user: "admin"
opensrp_dhis_password: "admin"
opensrp_couchdb_server: "localhost"
opensrp_couchdb_port: 5984
opensrp_couchdb_user: "root"
opensrp_couchdb_password: "root"
opensrp_rapidpro_url: ""
opensrp_rapidpro_token: ""
opensrp_nginx_max_filesize: "50M"
opensrp_nginx_client_header_buffers: "4 8k"
opensrp_local_checkout_path: "/tmp/{{ lookup('env', 'USER') }}/opensrp"
opensrp_local_package_directory: "/tmp/{{ lookup('env', 'USER') }}/opensrp-wars"
opensrp_activemq_host: "127.0.0.1"
opensrp_activemq_port: 61616
couchdb_databases:
  - "opensrp"
couchdb_admin_user: "root"
couchdb_admin_password: "root"
couchdb_version: "1.6.0-0ubuntu7"
couchdb_backups_to_s3: false
couchdb_lucene_install_path: "/opt/couchdb-lucene"
couchdb_lucene_support: true
couchdb_lucene_version_name: "v1.1.0"
couchdb_lucene_version_number: "1.1.0"
couchdb_backup_database: "opensrp"
allowed_couchdb_hosts: []
mysql_backups_to_s3: false
opensrp_tomcat_version: 9
opensrp_tomcat_http_port: 8082
opensrp_tomcat_shutdown_port: 8007
opensrp_tomcat_ajp_port: 8012
tomcat_https_port: 8443
opensrp_tomcat_max_filesize: "52428800"
opensrp_tomcat_fsize_threshold: "10485760"
catalina_ops: "-Xms1500M -Xmx1500M"
ssl_key: "{{ opensrp_site_name }}-key.pem"
ssl_cert: "{{ opensrp_site_name }}-fullchain.pem"
opensrp_system_user: "opensrp"
opensrp_system_group: "tomcat"
opensrp_tomcat_instance: "tomcat-opensrp"
opensrp_user_home: "/home/{{ opensrp_system_user }}"
opensrp_psql_as_primary_database: true
opensrp_core_tablespace: "pg_default"
opensrp_error_tablespace: "pg_default"
opensrp_schedule_tablespace: "pg_default"
opensrp_feed_tablespace: "pg_default"
opensrp_form_tablespace: "pg_default"
opensrp_postgresql_user: "opensrp_admin"
opensrp_postgresql_password:
opensrp_postgresql_database: "opensrp"
opensrp_redis_host: "localhost"
opensrp_redis_port: 6379
opensrp_redis_max_connections: 25
opensrp_authencation_cache_ttl: 600
opensrp_postgres_host: "localhost"
opensrp_postgres_port: 5432
opensrp_mysql_root_user: "root"
opensrp_mysql_root_password: ""
opensrp_postgres_superuser: postgres
opensrp_postgres_superuser_password: ""
opensrp_postgresql_user_role_attr_flags: "LOGIN"
opensrp_postgres_enable_ssl: true
opensrp_postgres_sslmode: "verify-ca"
opensrp_mybatis_version: "3.3.1"
opensrp_mybatis_install_dir: "/opt/mybatis"
opensrp_mybatis_env: "deployment"
opensrp_mybatis_migration_extra_args: ""
opensrp_java_packages:
  - openjdk-11-jre
opensrp_multimedia_parent_directory: "{{ opensrp_openmrs_tomcat_user_home }}/.OpenMRS"
# Whether to skip tasks that will involve configuring already running dependancies like
# running the database migrations
opensrp_install_only: false
opensrp_environment: "production"
opensrp_config_path: "configs/assets/config"
opensrp_resources_path: "src/main/resources"
opensrp_meta_inf_path: "src/main/webapp/META-INF"
opensrp_web_inf_path: "src/main/webapp/WEB-INF"
opensrp_index_html_path: "src/main/webapp/index.html"
opensrp_local_war_path: "target/opensrp.war"
opensrp_migrations_path: "configs/assets/migrations"

# List of profiles to be activated. Only the specified profiles will
# be made active. Read more on OpenSRP Server profiles here:
# https://smartregister.atlassian.net/wiki/spaces/Documentation/pages/616595457/Server+Web+Build

opensrp_maven_package_profiles:
  - postgres
  - jedis
  - basic_auth
opensrp_oauth_profiles:
  default:
    client_id: "opensrp-trusted-client"
    secret: "O@aTHS#cr3t"
    grant_types:
      - password
      - authorization_code
      - refresh_token
      - implicit
    scope:
      - read
      - write
      - trust
    token_validity: 3600
    callback_url: ""
    roles:
      - ROLE_CLIENT

#CORS allowed source domain
opensrp_cors_allowed_source: ""
opensrp_cors_max_age: "60"   

#Team module settings
opensrp_use_opensrp_team_module: false

# Object storage configuration (should be populated for deployments using object storage for multimedia)
opensrp_object_storage_access_key_id: "dummy"
opensrp_object_storage_secret_access_key: "dummy"
opensrp_object_storage_region: "dummy"
opensrp_object_storage_bucket_name: "dummy"
opensrp_object_storage_bucket_folder_path_prefix: ""
opensrp_object_storage_bucket_folder_path_suffix: ""
opensrp_unique_object_storage_bucket_folder_path: "{% if opensrp_object_storage_bucket_folder_path_prefix %}{{opensrp_object_storage_bucket_folder_path_prefix}}/{% endif %}{{ opensrp_site_name }}{% if opensrp_object_storage_bucket_folder_path_suffix %}/{{opensrp_object_storage_bucket_folder_path_suffix}}{% endif %}"

# multimedia file manager (is file system by default)
opensrp_multimedia_file_manager: "FileSystemMultimediaFileManager"


#Schedules interval Configuration in milliseconds
opensrp_event_add_serverversion_interval: 180000
opensrp_view_add_serverversion_interval: 120000
opensrp_task_add_serverversion_interval: 120000
opensrp_location_add_serverversion_interval: 120000

opensrp_openmrs_sync_interval: 300000
opensrp_openmrs_validate_interval: 420000
opensrp_dhis2_sync_interval: 600000

# SSL
opensrp_ssl_src_dir: "/etc/letsencrypt/live/{{ opensrp_site_name }}"
opensrp_ssl_cert_file: "fullchain.pem"
opensrp_ssl_key_file: "privkey.pem"
opensrp_certs_from_letsencrypt: true

opensrp_http_site: "{{ opensrp_site_name }}-http"
opensrp_https_site: "{{ opensrp_site_name }}-https"

# Certbot
opensrp_certbot_site_names: ["{{ opensrp_site_name }}"]
opensrp_certbot_mail_address: ""

# Swap
opensrp_swap_file_size_mb: 2048
opensrp_swap_swappiness: 10
opensrp_install_swap: false

# NGINX
opensrp_nginx_server_names_hash_bucket_size: 64
opensrp_nginx_sites:
  - server:
      name: "{{ opensrp_http_site }}"
      __listen: "80;\n  listen [::]:80;\n"
      server_name: "{{ opensrp_site_name }}"
      return: "301 https://$server_name$request_uri"
      ssl:
        enabled: false

  - server:
      name:  "{{ opensrp_https_site }}"
      __listen: "443;\n  listen [::]:443;\n"
      server_name: "{{ opensrp_site_name }}"
      client_max_body_size: "{{ opensrp_nginx_max_filesize }}"
      large_client_header_buffers: "{{ opensrp_nginx_client_header_buffers }}"
      ssl:
        enabled: true
        cert: "{{ opensrp_ssl_cert_file }}"
        key:  "{{ opensrp_ssl_key_file }}"
        src_dir: "{{ opensrp_ssl_src_dir }}"
        conf: "{{ opensrp_site_name }}-ssl.conf"
        remote_src: "{{ opensrp_certs_from_letsencrypt }}"
        create_symlink: "{{ opensrp_certs_from_letsencrypt }}"
        access_log_format: "timed_combined"

      location1:
        name: "= /"
        return: "301 https://$host/{{ opensrp_install_name }}/"

      location2:
        name: "/{{ opensrp_install_name }}"
        proxy_pass: "http://localhost:{{ opensrp_tomcat_http_port }}/{{ opensrp_install_name }}"
        proxy_read_timeout: "86400s"
        proxy_redirect: "off"
        proxy_next_upstream: "error timeout invalid_header http_502 http_503 http_504"
        proxy_set_header:
          - Host $host
          - X-Real-IP $remote_addr
          - X-Forwarded-For $proxy_add_x_forwarded_for
          - X-Forwarded-Host $server_name
          - X-Forwarded-Proto https
opensrp_nginx_log_dir: "/var/log/nginx"
opensrp_nginx_enabled_sites:
  - "{{ opensrp_http_site }}"
  - "{{ opensrp_https_site }}"
opensrp_nginx_disabled_sites:
  - default
opensrp_nginx_access_logs:
  - name: "timed_combined"
    format: "'$http_x_forwarded_for - $remote_user [$time_local]  \"$request\" $status $body_bytes_sent \"$http_referer\" \"$http_user_agent\" $request_time $upstream_response_time $gzip_ratio $request_length'"
    options: null
    filename: "access.log"

# Logstash
opensrp_install_logstash: false
opensrp_logstash_gelf_server: 127.0.0.1
opensrp_logstash_gelf_port: "12204"
opensrp_logstash_input_config_suffix: "{{ opensrp_site_name }}"
opensrp_clear_logstash_config: false
opensrp_logstash_plugins:
  - name: logstash-output-gelf
    state: present
opensrp_logstash_custom_outputs:
  - output: 'gelf'
    lines:
      - 'host => "{{ opensrp_logstash_gelf_server }}"'
      - 'port => "{{ opensrp_logstash_gelf_port }}"'
      - 'sender => "%{host}"'
opensrp_nginx_logstash_log: "{{ opensrp_nginx_log_dir }}/{{ opensrp_https_site }}-ssl-access.log"
opensrp_logstash_custom_inputs:
  - input: 'file'
    lines:
      - 'path => ["{{ opensrp_nginx_logstash_log }}"]'
      - 'start_position => "end"'
      - 'add_field => {'
      - '  ssl => true'
      - '  nginx_access => true'
      - '  from_nginx => true'
      - '  from_host => "%{host}"'
      - '  from_domain => "{{ opensrp_site_name }}"'
      - '  from_{{ opensrp_system_user }} => true'
      - '  git_version => "{{ opensrp_version }}"'
      - '  environment => "{{ opensrp_environment }}"'
      - '}'
opensrp_whitelabeling_copy_files: []

# MySQL CA Bundle url
opensrp_mysql_ca_bundle_url: "https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem"
# Postgres CA Bundle url
opensrp_postgres_ca_bundle_content: "{{ lookup('url', 'https://s3.amazonaws.com/rds-downloads/rds-ca-2019-root.pem', split_lines=false) }}"

opensrp_compile_java_home: "/usr/lib/jvm/java-11-openjdk-amd64"

#Keycloak Configuration
opensrp_keycloak_ssl_required: "external"
opensrp_keycloak_confidential_port: 0

#RabbitMQ Configuration
opensrp_rabbitmq_host: "localhost"
opensrp_rabbitmq_virtualhost: /
opensrp_rabbitmq_port: 5672
opensrp_rabbitmq_username: "opensrp"
opensrp_rabbitmq_password: ""
opensrp_rabbitmq_exchange: "rabbitmq.exchange"
opensrp_rabbitmq_task_queue: "rabbitmq.task.queue"
opensrp_rabbitmq_routingkey: "rabbitmq.routingkey"
opensrp_rabbitmq_reply_timeout: 60000
opensrp_rabbitmq_concurrent_consumers: 1
opensrp_rabbitmq_max_concurrent_consumers: 1
